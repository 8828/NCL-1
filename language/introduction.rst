了解NCL语言
========================
许多的NCL初学者都通过学习范例的形式来开始NCL的学习，一些人甚至不屑于去看语法知识。
这样难免造成后续的一些恶果，经常是程序执行出行异常，却不知是何原因，事实上都是忽
视语法学习的后果。

NCL的语言十分简洁，甚至可以说有些简陋，所以学习起来并不十分费劲。我想大概也就是
几个小时的时间，就能让你有个较为全面的理解。

下面将要地介绍下NCL语言的特点

解释性语言
------------------
不同于C、Fortran等编译型语言需要首先将代码编译成目标代码才能被执行，NCL属于解释型
语言，代码是经过NCL解释器被逐条执行的。与编译型语言的目标代码执行效率相比，解释性
语言执行效率较低。然而解释性语言能实时修改代码，这点较编译型语言灵活。

动态类型语言
------------------
动态类型语言也就是说，你不要在赋值一个变量前声明变量的类型，当你赋值后，NCL解释
器将自动根据值的类型来确定变量类型。常见的动态类型语言还有Python、Ruby，或者你在
用的Matlab等等。

强类型语言
------------------
NCL同时还是强类型语言，也就是说一旦变量类型确定，除强制转换类型外，你无法改变变
量的类型。因此强类型语言是类型安全的语言。显而易见，强类型语言的在类型上的严谨性
能够有效的避免许多错误。