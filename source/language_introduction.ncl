了解NCL语言
========================
许多的NCL初学者都通过学习范例的形式来开始NCL的学习，一些人甚至不屑于去看语法知识。
这样难免造成后续的一些恶果，经常是程序执行出行异常，却不知是何原因，事实上都是忽
视语法学习的后果。

NCL的语言十分简洁，甚至可以说有些简陋，所以学习起来并不十分费劲。我想大概也就是
几个小时的时间，就能让你有个较为全面的理解。

NCL语言特点
------------------
动态类型语言
^^^^^^^^^^^^^^
相较于编译型语言，脚本解释性语言通常设计的比较灵活，NCL也不例外。动态类型语言也
就是说，你不要在赋值一个变量前声明变量的类型，当你赋值后，NCL解释器将自动根据值
的类型来确定变量类型。常见的动态类型语言还有Python、Ruby，或者你在用的Matlab。

强类型语言
^^^^^^^^^^^^^^^
NCL同时还是强类型语言，也就是说一旦变量类型确定，除强制转换类型外，你无法改变变
量的类型。因此强类型语言是类型安全的语言。显而易见，强类型语言的在类型上的严谨性
能够有效的避免许多错误。